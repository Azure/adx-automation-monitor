#!/usr/bin/env bash

az login --service-principal -u $AKS_MANAGE_SP_NAME \
                             -p $AKS_MANAGE_SP_PASS \
                             -t $AKS_MANAGE_SP_TENANT


az aks install-cli --install-location ./kubectl
az aks get-credentials -n $AKS_CLUSTER_NAME -g $AKS_CLUSTER_RG 


build=$TRAVIS_BUILD_NUMBER
branch=$TRAVIS_BRANCH
host_env=A01_HOST_TARGET_$branch
host_target=${!host_env}


echo "apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: monitor
  labels:
    system: a01
    group: base
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: monitor
    spec:
      containers:
      - name: main
        image: adxautomationbase.azurecr.io/monitor:$branch-$build
        ports:
        - containerPort: 80
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: monitor-secrets
              key: secret_key
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: monitor-secrets
              key: client_id
        - name: AZURE_CLIENT_TENANT
          valueFrom:
            secretKeyRef:
              name: monitor-secrets
              key: client_tenant
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: monitor-secrets
              key: client_secret
        - name: AZURE_CLIENT_RESOURCE
          valueFrom:
            secretKeyRef:
              name: monitor-secrets
              key: client_resource
      imagePullSecrets:
      - name: monitor-registry
---
apiVersion: v1
kind: Service
metadata:
  name: monitor
  labels:
    system: a01
    group: base
spec:
  ports:
  - port: 80
  selector:
    app: monitor
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: store-ingress
  labels:
    system: a01
    group: base
  annotations:
    kubernetes.io/ingress.class: \"nginx\"
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - secretName: store-tls
    hosts:
    - $host_target
  rules:
  - host: $host_target
    http:
      paths:
      - path:
        backend:
          serviceName: monitor
          servicePort: 80
" | ./kubectl apply --namespace a01-monitor-$branch -f -